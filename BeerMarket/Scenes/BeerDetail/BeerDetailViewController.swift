//
//  BeerDetailViewController.swift
//  BeerMarket
//
//  Created by Matheus Cardoso kuhn on 01/07/19.
//  Copyright (c) 2019 MDT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BeerDetailDisplayLogic: class {
    func displaySomething(viewModel: BeerDetail.Something.ViewModel)
}

class BeerDetailViewController: UIViewController {
    
    // MARK: - IBOutlets
    
    // MARK: - Variables
    var interactor: BeerDetailBusinessLogic?
    var router: (NSObjectProtocol & BeerDetailRoutingLogic & BeerDetailDataPassing)?
    
    // MARK: - Object Life Cycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup
    private func setup() {
        let viewController = self
        let interactor = BeerDetailInteractor()
        let presenter = BeerDetailPresenter()
        let router = BeerDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: - View Life Cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }
    
    // MARK: - Do something
    func doSomething() {
        let request = BeerDetail.Something.Request()
        interactor?.doSomething(request: request)
    }
}

// MARK: - BeerDetailDisplayLogic
extension BeerDetailViewController: BeerDetailDisplayLogic {
    
    func displaySomething(viewModel: BeerDetail.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}
